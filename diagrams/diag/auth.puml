@startuml
class LoginArgs {
    + LoginArgs(user:IUser, phase:LoginPhase)
}
enum LoginPhase {
    Request,
    Response,
    Success,
}
interface IUser {
    Id : int <<get>> <<set>>
    Login : string <<get>> <<set>>
    Password : string <<get>> <<set>>
    Name : string <<get>> <<set>>
    Surname : string <<get>> <<set>>
    CheckPassword(password:string) : bool
}
LoginArgs --> "Phase" LoginPhase
LoginArgs --> "User" IUser
interface IAuthService {
    + CurrentUser : IUser? <<get>>
    + IsLogged : bool <<get>>
}
IAuthService --> "LoggedUser" IUser
class AuthService {
    + CurrentUser : IUser? <<get>>
    + IsLogged : bool <<get>>
    + AuthService(eventAggregator:IEventAggregator)
}
IAuthService <|-- AuthService
AuthService --> "LoggedUser" IUser
class UserPreLoginEvent <LoginArgs>
UserPreLoginEvent o-d-> LoginArgs
@enduml